Turbo Assembler	 Version 4.1	    02/29/20 17:04:13	    Page 1
lib.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     .186
      4				     locals @@
      5
      6				     public memchr, memset, memcmp, memcpy
      7				     public strchr, strlen, strcmp, strcpy
      8
      9	0000  48 65 6C 6C 6F 00	     Text1: db "Hello",	0
     10	0006  48 65 6C 6C 6F 00	     Text2: db "Hello",	0
     11
     12				     COMMENT *
     13				     ;-----------------------------MEMCHR-----------------------
     14				     ;The program finds	the first appearance of	the symbol not far
     15				     ;than in maximal number of	bytes from the pointer
     16				     ;
     17				     ;		     Entry:  ES	- segment with a string
     18				     ;				     DI	- pointer to the string	in the segment
     19				     ;				     AL	- char to find
     20				     ;				     CX	- maximal number of bytes
     21				     ;
     22				     ;		     Return value:
     23				     ; Returns value in	AX: a pointer to the location of the character,
     24				     ; or NULL if no such character is found.
     25				     ;
     26				     ;-----------------------------------------------------------
     27				     *
     28
     29	000C			     memchr proc
     30
     31	000C  FC		     cld
     32
     33	000D  F2> AE		     repne scasb
     34	000F  75 08		     jne NEQU
     35	0011  8B C7		     mov ax, di
     36	0013  2D 0001		     sub ax, 1
     37	0016  EB 04 90		     jmp @@Exit
     38
     39	0019			     NEQU:
     40	0019  B8 0000		     mov ax, 0
     41
     42	001C			     @@Exit:
     43
     44	001C  C3		     ret
     45	001D			     endp
     46
     47				     ;-----------------------------STRLEN------------------------------
     48				     ;The program returns the length of	the string up to symbol	'\0'
     49				     ;
     50				     ;		     Entry:  DS	- segment with a string
     51				     ;				     DI	- pointer to the string	in the segment
     52				     ;
     53				     ;		     Return value:
     54				     ; Returns value in	AX: length of the string
     55				     ;
     56				     ;-----------------------------------------------------------------
     57
Turbo Assembler	 Version 4.1	    02/29/20 17:04:13	    Page 2
lib.asm



     58	001D			     strlen proc
     59
     60	001D  57		     push di
     61	001E  B8 0000		     mov ax, 0
     62	0021			     @@Cycle:
     63	0021  80 3D 00		     cmp byte ptr ds:[di], 0
     64	0024  74 04		     je	@@End
     65	0026  47		     inc di
     66	0027  40		     inc ax
     67	0028  EB F7		     jmp @@Cycle
     68
     69	002A			     @@End:
     70	002A  5F		     pop di
     71	002B  C3		     ret
     72	002C			     endp
     73				     ;-------------------------------------------------------------------
     74
     75				     ;-----------------------------STRCHR-----------------------
     76				     ;The program finds	the first appearance of	the symbol before
     77				     ;terminating symbol of the	string ('\0').
     78				     ;
     79				     ;		     Entry:  ES	- segment with a string
     80				     ;				     DI	- pointer to the string	in the segment
     81				     ;				     AX	- char to find
     82				     ;
     83				     ;		     Return value:
     84				     ; Returns value in	DI: a pointer to the location of the character,
     85				     ; or NULL if no such character is found.
     86				     ;
     87				     ;-----------------------------------------------------------
     88
     89	002C			     strchr proc
     90
     91	002C			     @@Cycle:
     92	002C  2E: 39 05		     cmp cs:[di], ax
     93	002F  74 0C		     je	@@End
     94	0031  2E: 80 3D	00	     cmp byte ptr cs:[di], 0
     95	0035  74 03		     je	@@End1
     96	0037  47		     inc di
     97	0038  EB F2		     jmp @@Cycle
     98
     99
    100	003A			     @@End1:
    101	003A  BF 0000		     mov di, 0
    102
    103	003D			     @@End:
    104	003D  C3		     ret
    105	003E			     endp
    106				     ;-------------------------------------------------------------------------
    107
    108				     ;-----------------------------MEMCMP--------------------------------------
    109				     ;The program compares two strings up to number of bytes, equal to CX value
    110				     ;
    111				     ;		     Entry:  ES	- segment with the first string
    112				     ;				     DI	- pointer to the string	in the segment
    113				     ;				     DS	- segment with the second string
    114				     ;				     SI	- pointer to the second	string
Turbo Assembler	 Version 4.1	    02/29/20 17:04:13	    Page 3
lib.asm



    115				     ;				     CX	- maximal number of bytes
    116				     ;
    117				     ;		     Return value:
    118				     ; Returns value in	CX: value is equal zero	if the strings are equal.
    119				     ; Value is	above zero if the first	string is higher (lexicographically),
    120				     ; and below zero if not.
    121				     ;
    122				     ;-------------------------------------------------------------------------
    123	003E			     memcmp proc
    124
    125	003E  FC		     cld
    126	003F  F3> A6		     repe cmpsb
    127
    128	0041  C3		     ret
    129	0042			     endp
    130				     ;--------------------------------------------------------------------------
    131
    132
    133				     ;-----------------------------STRCMP--------------------------------------
    134				     ;The program compares two strings up to '\0' symbol.
    135				     ;
    136				     ;		     Entry:  ES	- segment with the first string
    137				     ;				     DI	- pointer to the string	in the segment
    138				     ;				     DS	- segment with the second string
    139				     ;				     SI	- pointer to the second	string
    140				     ;
    141				     ;		     Return value:
    142				     ; Returns value in	DI: value is equal zero	if the strings are equal.
    143				     ; Value is	above zero if the first	string is higher (lexicographically),
    144				     ; and below zero if not.
    145				     ;
    146				     ;-------------------------------------------------------------------------
    147	0042			     strcmp proc
    148
    149	0042  FC		     cld
    150	0043			     @@Cycle:
    151	0043  A6		     cmpsb
    152	0044  75 0B		     jne @@End
    153	0046  74 02		     je	@@Check_End
    154	0048  EB F9		     jmp @@Cycle
    155
    156	004A			     @@Check_End:
    157	004A  80 3C 00		     cmp byte ptr ds:[si], 0
    158	004D  74 02		     je	@@End
    159	004F  EB F2		     jmp @@Cycle
    160
    161	0051			     @@End:
    162	0051  C3		     ret
    163	0052			     endp
    164				     ;--------------------------------------------------------------------------
    165				     ;-----------------------------MEMSET--------------------------------------
    166				     ;The program inserts number of symbols from AX to the pointer.
    167				     ;
    168				     ;		     Entry:  ES	- segment with the string
    169				     ;				     DI	- pointer to the string	in the segment
    170				     ;				     AL	- symbol to insert
    171				     ;				     CX	- number of symbols
Turbo Assembler	 Version 4.1	    02/29/20 17:04:13	    Page 4
lib.asm



    172				     ;-------------------------------------------------------------------------
    173	0052			     memset proc
    174
    175	0052  F3> AA		     rep stosb
    176
    177	0054  C3		     ret
    178	0055			     endp
    179
    180				     ;-----------------------------MEMCPY--------------------------------------
    181				     ;The program inserts number of symbols from DS:SI to ES:DI.
    182				     ;
    183				     ;		     Entry:  DS	- segment with the first string	(source)
    184				     ;				     SI	- pointer to the string	in the segment (source)
    185				     ;				     ES	- segment with the second string (destination)
    186				     ;				     DI	- pointer to the string	in the segment (destination)
    187				     ;				     CX	- number of symbols
    188				     ;-------------------------------------------------------------------------
    189	0055			     memcpy proc
    190
    191	0055  F3> A4		     rep movsb
    192
    193	0057  C3		     ret
    194	0058			     endp
    195
    196				     ;-----------------------------STRCPY--------------------------------------
    197				     ;The program inserts number of symbols from DS:SI to ES:DI	until source
    198				     ;symbol is	equal '\0'.
    199				     ;
    200				     ;		     Entry:  DS	- segment with the first string	(source)
    201				     ;				     SI	- pointer to the string	in the segment (source)
    202				     ;				     ES	- segment with the second string (destination)
    203				     ;				     DI	- pointer to the string	in the segment (destination)
    204				     ;-------------------------------------------------------------------------
    205	0058			     strcpy proc
    206
    207	0058			     @@Cycle:
    208	0058  80 3C 00		     cmp byte ptr ds:[si], 0
    209	005B  74 03		     je	@End
    210	005D  A4		     movsb
    211	005E  EB F8		     jmp @@Cycle
    212
    213	0060			     @End:
    214	0060  C3		     ret
    215	0061			     endp
    216
    217				     end
Turbo Assembler	 Version 4.1	    02/29/20 17:04:13	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/29/20"
??FILENAME			  Text	 "lib	  "
??TIME				  Text	 "17:04:13"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@CHECK_END			  Near	 DGROUP:004A
@@CYCLE				  Near	 DGROUP:0021
@@CYCLE				  Near	 DGROUP:002C
@@CYCLE				  Near	 DGROUP:0043
@@CYCLE				  Near	 DGROUP:0058
@@END				  Near	 DGROUP:002A
@@END				  Near	 DGROUP:003D
@@END				  Near	 DGROUP:0051
@@END1				  Near	 DGROUP:003A
@@EXIT				  Near	 DGROUP:001C
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0103H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@END				  Near	 DGROUP:0060
@FILENAME			  Text	 LIB
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
MEMCHR				  Near	 DGROUP:000C
MEMCMP				  Near	 DGROUP:003E
MEMCPY				  Near	 DGROUP:0055
MEMSET				  Near	 DGROUP:0052
NEQU				  Near	 DGROUP:0019
STRCHR				  Near	 DGROUP:002C
STRCMP				  Near	 DGROUP:0042
STRCPY				  Near	 DGROUP:0058
STRLEN				  Near	 DGROUP:001D
TEXT1				  Near	 DGROUP:0000
TEXT2				  Near	 DGROUP:0006

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0061 Word	  Public  CODE
